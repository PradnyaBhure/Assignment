# For Blog Reader Users:
# 5. My comment history for specific blogs

from django.db import connection
from django.db import models

class Blog(models.Model):
    name = models.CharField(max_length=100)

class Comment(models.Model):
    blog = models.ForeignKey(Blog, on_delete=models.CASCADE)
    comment_text = models.TextField()
    created_date = models.DateTimeField()

class User(models.Model):
    name = models.CharField(max_length=50)

def get_comment_history(reader_username, blog_id):
    # Retrieve the comment history for specific blogs for a blog reader user
    query = """
        SELECT
            b.id AS blog_id,
            b.name AS blog_name,
            c.comment_text,
            c.created_date AS comment_date
        FROM myapp_blog b
        JOIN myapp_comment c ON b.id = c.blog_id
        JOIN myapp_user u ON c.user_id = u.id
        WHERE u.name = %s AND b.id in (%s)
        ORDER BY c.created_date DESC
    """
    
    with connection.cursor() as cursor:
        cursor.execute(query, [reader_username, blog_id])
        comment_history = cursor.fetchall()

    return comment_history

# Example usage:
reader_username = 'blog_reader_user'
blog_id_to_fetch = 1  # Replace with the specific blog IDs you're interested in
comment_history = get_comment_history(reader_username, blog_id_to_fetch)

# Print the results
for comment in comment_history:
    print(f"Blog ID: {comment[0]}, Blog Name: {comment[1]}")
    print(f"Comment: {comment[2]}, Comment Date: {comment[3]}")
